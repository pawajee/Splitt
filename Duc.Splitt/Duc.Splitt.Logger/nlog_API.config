<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="C:\SmartEVLogs\ConsumerAppLogs\Internal\Internal.log">
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>
  <variable name="lastmsg"
  value="${replace:inner=${message}:searchFor=&#34;attachment&#34;[\\s]?(\:)[\\s]?&#34;([\\w-\\.+/*=]{1,\})&#34;:replaceWith=&#34;attachment&#34;\:&#34;***&#34;:regex=true}" />

  <variable name="lastmsg1"
	 value="${replace:inner=${message}:searchFor=(\\d{5\}):replaceWith=*****:regex=true}" />
  <targets>
    <target name="writeToLog1" keepConnection="false"
				xsi:type="Database"
				connectionString="${configsetting:name=Logger.DbConnectionStringLogger}"
				dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient"
				commandType="StoredProcedure"
				commandText="${configsetting:name=Logger.StoredProcedureName_log1}">
      <parameter name="@deviceId"    layout="${aspnet-request-headers:HeaderNames=deviceId}" />
      <parameter name="@deviceToken"    layout="${aspnet-request-headers:HeaderNames=deviceToken}" />
      <parameter name="@deviceTypeId"    layout="${aspnet-request-headers:HeaderNames=deviceTypeId}" />
      <parameter name="@tokenId"    layout="${aspnet-request-headers:HeaderNames=tokenId}${event-properties:param2}" />
      <parameter name="@chargePointId"    layout="${event-properties:param3}" />
      <parameter name="@header"    layout="${event-properties:appheader}" />
      <!--<parameter name="@refId"    layout="${aspnet-request-headers:HeaderNames=refId}${event-properties:refId}" />-->
      <parameter name="@module"    layout="${aspnet-mvc-controller}${event-properties:module}" />
      <parameter name="@method"    layout="${aspnet-mvc-action}${event-properties:method}-${event-properties:param1}" />
      <parameter name="@methodType"    layout="${aspnet-request-method}${event-properties:methodType}" />
      <parameter name="@logType"         layout="${event-properties:logType}" />

      <parameter name="@responseTime"    layout="${event-properties:responseTime}" />
      <parameter name="@traceIdentifier"    layout="${aspnet-traceidentifier}${event-properties:traceIdentifier}" />
      <parameter name="@statusCode"    layout="${aspnet-response-statuscode}${event-properties:statusCode}" />

      <parameter name="@postedBody"      layout="${aspnet-request-posted-body}${event-properties:postedBody}" />
      <parameter name="@queryParam"      layout="${aspnet-request-querystring}${event-properties:queryParam}" />


      <parameter name="@ipAddress"      layout="${aspnet-request-ip}${event-properties:ipAddress}" />
      <parameter name="@userAgent"      layout="${aspnet-request-useragent}${event-properties:userAgent}" />
      <parameter name="@refURL"         layout="${aspnet-request-url}${event-properties:refURL}" />

      <parameter name="@message"          layout="${var:lastmsg}" />
      <parameter name="@exception"        layout="${exception:format=ToString,StackTrace:maxInnerExceptionLevel=2}" />
      <parameter name="@stacktrace"        layout="${exception:format=stacktrace}" />


      <parameter name="@logLevel"       layout="${level:upperCase=true}" />
      <parameter name="@serverName"      layout="${machinename}" />
      <parameter name="@CreatedOn"      layout="${date}" />


    </target>
    <target name="writeToLog2" keepConnection="false"
         xsi:type="Database"
         connectionString="${configsetting:name=Logger.DbConnectionStringLogger}"
         dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient"
         commandType="StoredProcedure"
         commandText="${configsetting:name=Logger.StoredProcedureName_log2}">

      <parameter name="@deviceId"    layout="${aspnet-request-headers:HeaderNames=deviceId}" />
      <parameter name="@deviceToken"    layout="${aspnet-request-headers:HeaderNames=deviceToken}" />
      <parameter name="@deviceTypeId"    layout="${aspnet-request-headers:HeaderNames=deviceTypeId}" />
      <parameter name="@tokenId"    layout="${aspnet-request-headers:HeaderNames=tokenId}${event-properties:param2}" />
      <parameter name="@chargePointId"    layout="${event-properties:param3}" />
      <parameter name="@header"    layout="${event-properties:header}" />
      <!--<parameter name="@refId"    layout="${aspnet-request-headers:HeaderNames=refId}${event-properties:refId}" />-->
      <parameter name="@module"    layout="${aspnet-mvc-controller}${event-properties:module}" />
      <parameter name="@method"    layout="${aspnet-mvc-action}${event-properties:method}-${event-properties:param1}" />
      <parameter name="@methodType"    layout="${aspnet-request-method}${event-properties:methodType}" />
      <parameter name="@logType"         layout="${event-properties:logType}" />

      <parameter name="@responseTime"    layout="${event-properties:responseTime}" />
      <parameter name="@traceIdentifier"    layout="${aspnet-traceidentifier}${event-properties:traceIdentifier}" />
      <parameter name="@statusCode"    layout="${aspnet-response-statuscode}${event-properties:statusCode}" />

      <parameter name="@postedBody"      layout="${aspnet-request-posted-body}${event-properties:postedBody}" />
      <parameter name="@queryParam"      layout="${aspnet-request-querystring}${event-properties:queryParam}" />


      <parameter name="@ipAddress"      layout="${aspnet-request-ip}${event-properties:ipAddress}" />
      <parameter name="@userAgent"      layout="${aspnet-request-useragent}${event-properties:userAgent}" />
      <parameter name="@refURL"         layout="${aspnet-request-url}${event-properties:refURL}" />

      <parameter name="@message"          layout="${var:lastmsg}" />
      <parameter name="@exception"        layout="${exception:format=ToString,StackTrace:maxInnerExceptionLevel=2}" />
      <parameter name="@stacktrace"        layout="${exception:format=stacktrace}" />


      <parameter name="@logLevel"       layout="${level:upperCase=true}" />
      <parameter name="@serverName"      layout="${machinename}" />
      <parameter name="@CreatedOn"      layout="${date}" />



    </target>

  </targets>
  <rules>
    <logger name="System.Net.Http.*"  final="true" />
    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="writeToLog1" final="true" />
    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*"  final="true" />
    <logger name="*"  writeTo="writeToLog1" />
    <logger name="*" minlevel="Error"  writeTo="writeToLog1,writeToLog2" />
  </rules>
</nlog>